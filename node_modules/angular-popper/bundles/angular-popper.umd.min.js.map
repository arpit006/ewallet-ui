{"version":3,"sources":["ng://angular-popper/lib/angular-popper.component.ts","ng://angular-popper/lib/angular-popper.module.ts"],"names":["PopperComponent","el","zone","this","EventEmitter","prototype","ngAfterViewInit","create","ngOnChanges","changes","firstChange","destroy","ngOnDestroy","onClose","show","close","emit","_this","runOutsideAngular","_a","placement","positionFixed","eventsEnabled","modifiers","popper","Popper","getTargetNode","nativeElement","querySelector","target","document","Component","args","selector","template","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","NgZone","Input","Output","NgxPopper","NgModule","imports","CommonModule","declarations","exports"],"mappings":"6ZAAA,IAAAA,EAAA,WAmDE,SAAAA,EAAoBC,EAAwBC,GAAxBC,KAAAF,GAAAA,EAAwBE,KAAAD,KAAAA,aAZ5B,oBACO,iBACgB,6BACd,sBACA,aAIP,IAAIE,EAAAA,oBAMtBJ,EAAAK,UAAAC,gBAAA,WACEH,KAAKI,UAGPP,EAAAK,UAAAG,YAAA,SAAYC,IAERA,EAAO,SAAYA,EAAO,OAAQC,aAClCD,EAAO,YAAeA,EAAO,UAAWC,aACxCD,EAAO,gBAAmBA,EAAO,cAAeC,aAChDD,EAAO,gBAAmBA,EAAO,cAAeC,eAEhDP,KAAKQ,UACLR,KAAKI,WAITP,EAAAK,UAAAO,YAAA,WACET,KAAKQ,WAGPX,EAAAK,UAAAQ,QAAA,WACEV,KAAKW,MAAO,EACZX,KAAKY,MAAMC,QAGbhB,EAAAK,UAAAE,OAAA,WAAA,IAAAU,EAAAd,KACEA,KAAKD,KAAKgB,kBAAkB,WAC1B,IAAAC,EAAAF,EAAQG,EAAAD,EAAAC,UAAWC,EAAAF,EAAAE,cAAeC,EAAAH,EAAAG,cAAeC,EAAAJ,EAAAI,UAEjDN,EAAKO,OAAS,IAAIC,EAChBR,EAAKS,gBACLT,EAAKhB,GAAG0B,cAAcC,cAAc,mBACpC,CACER,UAASA,EACTC,cAAaA,EACbC,cAAaA,EACbC,UAASA,OAMjBvB,EAAAK,UAAAM,QAAA,WAAA,IAAAM,EAAAd,KACMA,KAAKqB,SACPrB,KAAKD,KAAKgB,kBAAkB,WAC1BD,EAAKO,OAAOb,YAGdR,KAAKqB,OAAS,OAIVxB,EAAAK,UAAAqB,yBACN,OAAIvB,KAAK0B,OACoB,iBAAhB1B,KAAK0B,OACPC,SAASF,cAAczB,KAAK0B,QAE5B1B,KAAK0B,OAGP1B,KAAKF,GAAG0B,mCAjGpBI,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iBACVC,SAAU,0aAgBVC,OAAQ,CAAC,u8CACTC,cAAeC,EAAAA,kBAAkBC,KACjCC,gBAAiBC,EAAAA,wBAAwBC,oDA5BzCC,EAAAA,kBAIAC,EAAAA,wCA2BCC,EAAAA,2BACAA,EAAAA,yBACAA,EAAAA,6BACAA,EAAAA,6BACAA,EAAAA,yBACAA,EAAAA,sBACAA,EAAAA,qBAEAC,EAAAA,YA/CH,GCAAC,EAAA,oDAOCC,EAAAA,SAAQf,KAAA,CAAC,CACRgB,QAAS,CACPC,EAAAA,cAEFC,aAAc,CACZlD,GAEFmD,QAAS,CACPnD,SAfJ","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  OnDestroy,\n  OnChanges,\n  ElementRef,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  NgZone\n} from '@angular/core';\nimport Popper from 'popper.js';\n\n@Component({\n  selector: 'angular-popper',\n  template: `<ng-content></ng-content>\n\n<div class=\"angular-popper\"\n     [class.visible]=\"show\">\n  <button type=\"button\"\n          class=\"angular-popper__close\"\n          *ngIf=\"closeButton\"\n          (click)=\"onClose()\">\n    <ng-content select=\".close-button, [close-button]\"></ng-content>\n  </button>\n\n  <ng-content select=\".content, [content]\"></ng-content>\n\n  <div class=\"angular-popper__arrow\" x-arrow></div>\n</div>\n`,\n  styles: [`.angular-popper{position:absolute;background:#ffc107;color:#000;width:150px;border-radius:3px;box-shadow:0 0 2px rgba(0,0,0,.5);padding:10px;text-align:center}.angular-popper:not(.visible){display:none}.angular-popper .angular-popper__arrow{width:0;height:0;border-style:solid;border-color:#ffc107;position:absolute;margin:5px}.angular-popper[x-placement^=top]{margin-bottom:5px}.angular-popper[x-placement^=top] .angular-popper__arrow{border-width:5px 5px 0;border-left-color:transparent;border-right-color:transparent;border-bottom-color:transparent;bottom:-5px;left:calc(50% - 5px);margin-top:0;margin-bottom:0}.angular-popper[x-placement^=bottom]{margin-top:5px}.angular-popper[x-placement^=bottom] .angular-popper__arrow{border-width:0 5px 5px;border-left-color:transparent;border-right-color:transparent;border-top-color:transparent;top:-5px;left:calc(50% - 5px);margin-top:0;margin-bottom:0}.angular-popper[x-placement^=right]{margin-left:5px}.angular-popper[x-placement^=right] .angular-popper__arrow{border-width:5px 5px 5px 0;border-left-color:transparent;border-top-color:transparent;border-bottom-color:transparent;left:-5px;top:calc(50% - 5px);margin-left:0;margin-right:0}.angular-popper[x-placement^=left]{margin-right:5px}.angular-popper[x-placement^=left] .angular-popper__arrow{border-width:5px 0 5px 5px;border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;right:-5px;top:calc(50% - 5px);margin-left:0;margin-right:0}`],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopperComponent implements AfterViewInit, OnChanges, OnDestroy {\n  @Input() show = true;\n  @Input() closeButton = false;\n  @Input() placement: Popper.Placement = 'bottom';\n  @Input() positionFixed = false;\n  @Input() eventsEnabled = true;\n  @Input() modifiers: Popper.Modifiers;\n  @Input() target: string | Element;\n\n  @Output() close = new EventEmitter();\n\n  private popper: Popper;\n\n  constructor(private el: ElementRef, private zone: NgZone) {}\n\n  ngAfterViewInit() {\n    this.create();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes.target && !changes.target.firstChange ||\n      changes.placement && !changes.placement.firstChange ||\n      changes.positionFixed && !changes.positionFixed.firstChange ||\n      changes.eventsEnabled && !changes.eventsEnabled.firstChange\n    ) {\n      this.destroy();\n      this.create();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  onClose() {\n    this.show = false;\n    this.close.emit();\n  }\n\n  create() {\n    this.zone.runOutsideAngular(() => {\n      const { placement, positionFixed, eventsEnabled, modifiers } = this;\n\n      this.popper = new Popper(\n        this.getTargetNode(),\n        this.el.nativeElement.querySelector('.angular-popper'),\n        {\n          placement,\n          positionFixed,\n          eventsEnabled,\n          modifiers\n        }\n      );\n    });\n  }\n\n  destroy() {\n    if (this.popper) {\n      this.zone.runOutsideAngular(() => {\n        this.popper.destroy();\n      });\n\n      this.popper = null;\n    }\n  }\n\n  private getTargetNode(): Element {\n    if (this.target) {\n      if (typeof this.target === 'string') {\n        return document.querySelector(this.target);\n      } else {\n        return this.target;\n      }\n    } else {\n      return this.el.nativeElement;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PopperComponent } from './angular-popper.component';\n\nexport * from './angular-popper.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PopperComponent\n  ],\n  exports: [\n    PopperComponent\n  ]\n})\nexport class NgxPopper {}\n"]}