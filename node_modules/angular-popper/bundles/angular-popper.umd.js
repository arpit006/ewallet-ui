(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('popper.js'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('angular-popper', ['exports', '@angular/core', 'popper.js', '@angular/common'], factory) :
    (factory((global['angular-popper'] = {}),global.ng.core,null,global.ng.common));
}(this, (function (exports,core,Popper,common) { 'use strict';

    Popper = Popper && Popper.hasOwnProperty('default') ? Popper['default'] : Popper;

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var PopperComponent = (function () {
        function PopperComponent(el, zone) {
            this.el = el;
            this.zone = zone;
            this.show = true;
            this.closeButton = false;
            this.placement = 'bottom';
            this.positionFixed = false;
            this.eventsEnabled = true;
            this.close = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        PopperComponent.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
                this.create();
            };
        /**
         * @param {?} changes
         * @return {?}
         */
        PopperComponent.prototype.ngOnChanges = /**
         * @param {?} changes
         * @return {?}
         */
            function (changes) {
                if (changes["target"] && !changes["target"].firstChange ||
                    changes["placement"] && !changes["placement"].firstChange ||
                    changes["positionFixed"] && !changes["positionFixed"].firstChange ||
                    changes["eventsEnabled"] && !changes["eventsEnabled"].firstChange) {
                    this.destroy();
                    this.create();
                }
            };
        /**
         * @return {?}
         */
        PopperComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                this.destroy();
            };
        /**
         * @return {?}
         */
        PopperComponent.prototype.onClose = /**
         * @return {?}
         */
            function () {
                this.show = false;
                this.close.emit();
            };
        /**
         * @return {?}
         */
        PopperComponent.prototype.create = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.zone.runOutsideAngular(function () {
                    var _a = _this, placement = _a.placement, positionFixed = _a.positionFixed, eventsEnabled = _a.eventsEnabled, modifiers = _a.modifiers;
                    _this.popper = new Popper(_this.getTargetNode(), _this.el.nativeElement.querySelector('.angular-popper'), {
                        placement: placement,
                        positionFixed: positionFixed,
                        eventsEnabled: eventsEnabled,
                        modifiers: modifiers
                    });
                });
            };
        /**
         * @return {?}
         */
        PopperComponent.prototype.destroy = /**
         * @return {?}
         */
            function () {
                var _this = this;
                if (this.popper) {
                    this.zone.runOutsideAngular(function () {
                        _this.popper.destroy();
                    });
                    this.popper = null;
                }
            };
        /**
         * @return {?}
         */
        PopperComponent.prototype.getTargetNode = /**
         * @return {?}
         */
            function () {
                if (this.target) {
                    if (typeof this.target === 'string') {
                        return document.querySelector(this.target);
                    }
                    else {
                        return this.target;
                    }
                }
                else {
                    return this.el.nativeElement;
                }
            };
        PopperComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'angular-popper',
                        template: "<ng-content></ng-content>\n\n<div class=\"angular-popper\"\n     [class.visible]=\"show\">\n  <button type=\"button\"\n          class=\"angular-popper__close\"\n          *ngIf=\"closeButton\"\n          (click)=\"onClose()\">\n    <ng-content select=\".close-button, [close-button]\"></ng-content>\n  </button>\n\n  <ng-content select=\".content, [content]\"></ng-content>\n\n  <div class=\"angular-popper__arrow\" x-arrow></div>\n</div>\n",
                        styles: [".angular-popper{position:absolute;background:#ffc107;color:#000;width:150px;border-radius:3px;box-shadow:0 0 2px rgba(0,0,0,.5);padding:10px;text-align:center}.angular-popper:not(.visible){display:none}.angular-popper .angular-popper__arrow{width:0;height:0;border-style:solid;border-color:#ffc107;position:absolute;margin:5px}.angular-popper[x-placement^=top]{margin-bottom:5px}.angular-popper[x-placement^=top] .angular-popper__arrow{border-width:5px 5px 0;border-left-color:transparent;border-right-color:transparent;border-bottom-color:transparent;bottom:-5px;left:calc(50% - 5px);margin-top:0;margin-bottom:0}.angular-popper[x-placement^=bottom]{margin-top:5px}.angular-popper[x-placement^=bottom] .angular-popper__arrow{border-width:0 5px 5px;border-left-color:transparent;border-right-color:transparent;border-top-color:transparent;top:-5px;left:calc(50% - 5px);margin-top:0;margin-bottom:0}.angular-popper[x-placement^=right]{margin-left:5px}.angular-popper[x-placement^=right] .angular-popper__arrow{border-width:5px 5px 5px 0;border-left-color:transparent;border-top-color:transparent;border-bottom-color:transparent;left:-5px;top:calc(50% - 5px);margin-left:0;margin-right:0}.angular-popper[x-placement^=left]{margin-right:5px}.angular-popper[x-placement^=left] .angular-popper__arrow{border-width:5px 0 5px 5px;border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;right:-5px;top:calc(50% - 5px);margin-left:0;margin-right:0}"],
                        encapsulation: core.ViewEncapsulation.None,
                        changeDetection: core.ChangeDetectionStrategy.OnPush
                    },] },
        ];
        /** @nocollapse */
        PopperComponent.ctorParameters = function () {
            return [
                { type: core.ElementRef },
                { type: core.NgZone }
            ];
        };
        PopperComponent.propDecorators = {
            show: [{ type: core.Input }],
            closeButton: [{ type: core.Input }],
            placement: [{ type: core.Input }],
            positionFixed: [{ type: core.Input }],
            eventsEnabled: [{ type: core.Input }],
            modifiers: [{ type: core.Input }],
            target: [{ type: core.Input }],
            close: [{ type: core.Output }]
        };
        return PopperComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var NgxPopper = (function () {
        function NgxPopper() {
        }
        NgxPopper.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule
                        ],
                        declarations: [
                            PopperComponent
                        ],
                        exports: [
                            PopperComponent
                        ]
                    },] },
        ];
        return NgxPopper;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    exports.PopperComponent = PopperComponent;
    exports.NgxPopper = NgxPopper;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1wb3BwZXIudW1kLmpzLm1hcCIsInNvdXJjZXMiOlsibmc6Ly9hbmd1bGFyLXBvcHBlci9saWIvYW5ndWxhci1wb3BwZXIuY29tcG9uZW50LnRzIiwibmc6Ly9hbmd1bGFyLXBvcHBlci9saWIvYW5ndWxhci1wb3BwZXIubW9kdWxlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgRXZlbnRFbWl0dGVyLFxuICBBZnRlclZpZXdJbml0LFxuICBPbkRlc3Ryb3ksXG4gIE9uQ2hhbmdlcyxcbiAgRWxlbWVudFJlZixcbiAgU2ltcGxlQ2hhbmdlcyxcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBOZ1pvbmVcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgUG9wcGVyIGZyb20gJ3BvcHBlci5qcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FuZ3VsYXItcG9wcGVyJyxcbiAgdGVtcGxhdGU6IGA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG5cbjxkaXYgY2xhc3M9XCJhbmd1bGFyLXBvcHBlclwiXG4gICAgIFtjbGFzcy52aXNpYmxlXT1cInNob3dcIj5cbiAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICBjbGFzcz1cImFuZ3VsYXItcG9wcGVyX19jbG9zZVwiXG4gICAgICAgICAgKm5nSWY9XCJjbG9zZUJ1dHRvblwiXG4gICAgICAgICAgKGNsaWNrKT1cIm9uQ2xvc2UoKVwiPlxuICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIi5jbG9zZS1idXR0b24sIFtjbG9zZS1idXR0b25dXCI+PC9uZy1jb250ZW50PlxuICA8L2J1dHRvbj5cblxuICA8bmctY29udGVudCBzZWxlY3Q9XCIuY29udGVudCwgW2NvbnRlbnRdXCI+PC9uZy1jb250ZW50PlxuXG4gIDxkaXYgY2xhc3M9XCJhbmd1bGFyLXBvcHBlcl9fYXJyb3dcIiB4LWFycm93PjwvZGl2PlxuPC9kaXY+XG5gLFxuICBzdHlsZXM6IFtgLmFuZ3VsYXItcG9wcGVye3Bvc2l0aW9uOmFic29sdXRlO2JhY2tncm91bmQ6I2ZmYzEwNztjb2xvcjojMDAwO3dpZHRoOjE1MHB4O2JvcmRlci1yYWRpdXM6M3B4O2JveC1zaGFkb3c6MCAwIDJweCByZ2JhKDAsMCwwLC41KTtwYWRkaW5nOjEwcHg7dGV4dC1hbGlnbjpjZW50ZXJ9LmFuZ3VsYXItcG9wcGVyOm5vdCgudmlzaWJsZSl7ZGlzcGxheTpub25lfS5hbmd1bGFyLXBvcHBlciAuYW5ndWxhci1wb3BwZXJfX2Fycm93e3dpZHRoOjA7aGVpZ2h0OjA7Ym9yZGVyLXN0eWxlOnNvbGlkO2JvcmRlci1jb2xvcjojZmZjMTA3O3Bvc2l0aW9uOmFic29sdXRlO21hcmdpbjo1cHh9LmFuZ3VsYXItcG9wcGVyW3gtcGxhY2VtZW50Xj10b3Bde21hcmdpbi1ib3R0b206NXB4fS5hbmd1bGFyLXBvcHBlclt4LXBsYWNlbWVudF49dG9wXSAuYW5ndWxhci1wb3BwZXJfX2Fycm93e2JvcmRlci13aWR0aDo1cHggNXB4IDA7Ym9yZGVyLWxlZnQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLXJpZ2h0LWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci1ib3R0b20tY29sb3I6dHJhbnNwYXJlbnQ7Ym90dG9tOi01cHg7bGVmdDpjYWxjKDUwJSAtIDVweCk7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MH0uYW5ndWxhci1wb3BwZXJbeC1wbGFjZW1lbnRePWJvdHRvbV17bWFyZ2luLXRvcDo1cHh9LmFuZ3VsYXItcG9wcGVyW3gtcGxhY2VtZW50Xj1ib3R0b21dIC5hbmd1bGFyLXBvcHBlcl9fYXJyb3d7Ym9yZGVyLXdpZHRoOjAgNXB4IDVweDtib3JkZXItbGVmdC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXItcmlnaHQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLXRvcC1jb2xvcjp0cmFuc3BhcmVudDt0b3A6LTVweDtsZWZ0OmNhbGMoNTAlIC0gNXB4KTttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbTowfS5hbmd1bGFyLXBvcHBlclt4LXBsYWNlbWVudF49cmlnaHRde21hcmdpbi1sZWZ0OjVweH0uYW5ndWxhci1wb3BwZXJbeC1wbGFjZW1lbnRePXJpZ2h0XSAuYW5ndWxhci1wb3BwZXJfX2Fycm93e2JvcmRlci13aWR0aDo1cHggNXB4IDVweCAwO2JvcmRlci1sZWZ0LWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci10b3AtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLWJvdHRvbS1jb2xvcjp0cmFuc3BhcmVudDtsZWZ0Oi01cHg7dG9wOmNhbGMoNTAlIC0gNXB4KTttYXJnaW4tbGVmdDowO21hcmdpbi1yaWdodDowfS5hbmd1bGFyLXBvcHBlclt4LXBsYWNlbWVudF49bGVmdF17bWFyZ2luLXJpZ2h0OjVweH0uYW5ndWxhci1wb3BwZXJbeC1wbGFjZW1lbnRePWxlZnRdIC5hbmd1bGFyLXBvcHBlcl9fYXJyb3d7Ym9yZGVyLXdpZHRoOjVweCAwIDVweCA1cHg7Ym9yZGVyLXRvcC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXItcmlnaHQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLWJvdHRvbS1jb2xvcjp0cmFuc3BhcmVudDtyaWdodDotNXB4O3RvcDpjYWxjKDUwJSAtIDVweCk7bWFyZ2luLWxlZnQ6MDttYXJnaW4tcmlnaHQ6MH1gXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgUG9wcGVyQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICBASW5wdXQoKSBzaG93ID0gdHJ1ZTtcbiAgQElucHV0KCkgY2xvc2VCdXR0b24gPSBmYWxzZTtcbiAgQElucHV0KCkgcGxhY2VtZW50OiBQb3BwZXIuUGxhY2VtZW50ID0gJ2JvdHRvbSc7XG4gIEBJbnB1dCgpIHBvc2l0aW9uRml4ZWQgPSBmYWxzZTtcbiAgQElucHV0KCkgZXZlbnRzRW5hYmxlZCA9IHRydWU7XG4gIEBJbnB1dCgpIG1vZGlmaWVyczogUG9wcGVyLk1vZGlmaWVycztcbiAgQElucHV0KCkgdGFyZ2V0OiBzdHJpbmcgfCBFbGVtZW50O1xuXG4gIEBPdXRwdXQoKSBjbG9zZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBwcml2YXRlIHBvcHBlcjogUG9wcGVyO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWw6IEVsZW1lbnRSZWYsIHByaXZhdGUgem9uZTogTmdab25lKSB7fVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICB0aGlzLmNyZWF0ZSgpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIGlmIChcbiAgICAgIGNoYW5nZXMudGFyZ2V0ICYmICFjaGFuZ2VzLnRhcmdldC5maXJzdENoYW5nZSB8fFxuICAgICAgY2hhbmdlcy5wbGFjZW1lbnQgJiYgIWNoYW5nZXMucGxhY2VtZW50LmZpcnN0Q2hhbmdlIHx8XG4gICAgICBjaGFuZ2VzLnBvc2l0aW9uRml4ZWQgJiYgIWNoYW5nZXMucG9zaXRpb25GaXhlZC5maXJzdENoYW5nZSB8fFxuICAgICAgY2hhbmdlcy5ldmVudHNFbmFibGVkICYmICFjaGFuZ2VzLmV2ZW50c0VuYWJsZWQuZmlyc3RDaGFuZ2VcbiAgICApIHtcbiAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgdGhpcy5jcmVhdGUoKTtcbiAgICB9XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLmRlc3Ryb3koKTtcbiAgfVxuXG4gIG9uQ2xvc2UoKSB7XG4gICAgdGhpcy5zaG93ID0gZmFsc2U7XG4gICAgdGhpcy5jbG9zZS5lbWl0KCk7XG4gIH1cblxuICBjcmVhdGUoKSB7XG4gICAgdGhpcy56b25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHtcbiAgICAgIGNvbnN0IHsgcGxhY2VtZW50LCBwb3NpdGlvbkZpeGVkLCBldmVudHNFbmFibGVkLCBtb2RpZmllcnMgfSA9IHRoaXM7XG5cbiAgICAgIHRoaXMucG9wcGVyID0gbmV3IFBvcHBlcihcbiAgICAgICAgdGhpcy5nZXRUYXJnZXROb2RlKCksXG4gICAgICAgIHRoaXMuZWwubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuYW5ndWxhci1wb3BwZXInKSxcbiAgICAgICAge1xuICAgICAgICAgIHBsYWNlbWVudCxcbiAgICAgICAgICBwb3NpdGlvbkZpeGVkLFxuICAgICAgICAgIGV2ZW50c0VuYWJsZWQsXG4gICAgICAgICAgbW9kaWZpZXJzXG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgfSk7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIGlmICh0aGlzLnBvcHBlcikge1xuICAgICAgdGhpcy56b25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHtcbiAgICAgICAgdGhpcy5wb3BwZXIuZGVzdHJveSgpO1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMucG9wcGVyID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGdldFRhcmdldE5vZGUoKTogRWxlbWVudCB7XG4gICAgaWYgKHRoaXMudGFyZ2V0KSB7XG4gICAgICBpZiAodHlwZW9mIHRoaXMudGFyZ2V0ID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLnRhcmdldCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdGhpcy50YXJnZXQ7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQ7XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuaW1wb3J0IHsgUG9wcGVyQ29tcG9uZW50IH0gZnJvbSAnLi9hbmd1bGFyLXBvcHBlci5jb21wb25lbnQnO1xuXG5leHBvcnQgKiBmcm9tICcuL2FuZ3VsYXItcG9wcGVyLmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGVcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgUG9wcGVyQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBQb3BwZXJDb21wb25lbnRcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBOZ3hQb3BwZXIge31cbiJdLCJuYW1lcyI6WyJFdmVudEVtaXR0ZXIiLCJDb21wb25lbnQiLCJWaWV3RW5jYXBzdWxhdGlvbiIsIkNoYW5nZURldGVjdGlvblN0cmF0ZWd5IiwiRWxlbWVudFJlZiIsIk5nWm9uZSIsIklucHV0IiwiT3V0cHV0IiwiTmdNb2R1bGUiLCJDb21tb25Nb2R1bGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO1FBbURFLHlCQUFvQixFQUFjLEVBQVUsSUFBWTtZQUFwQyxPQUFFLEdBQUYsRUFBRSxDQUFZO1lBQVUsU0FBSSxHQUFKLElBQUksQ0FBUTt3QkFaeEMsSUFBSTsrQkFDRyxLQUFLOzZCQUNXLFFBQVE7aUNBQ3RCLEtBQUs7aUNBQ0wsSUFBSTt5QkFJWCxJQUFJQSxpQkFBWSxFQUFFO1NBSXdCOzs7O1FBRTVELHlDQUFlOzs7WUFBZjtnQkFDRSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7YUFDZjs7Ozs7UUFFRCxxQ0FBVzs7OztZQUFYLFVBQVksT0FBc0I7Z0JBQ2hDLElBQ0UsT0FBTyxjQUFXLENBQUMsT0FBTyxXQUFRLFdBQVc7b0JBQzdDLE9BQU8saUJBQWMsQ0FBQyxPQUFPLGNBQVcsV0FBVztvQkFDbkQsT0FBTyxxQkFBa0IsQ0FBQyxPQUFPLGtCQUFlLFdBQVc7b0JBQzNELE9BQU8scUJBQWtCLENBQUMsT0FBTyxrQkFBZSxXQUNsRCxFQUFFO29CQUNBLElBQUks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